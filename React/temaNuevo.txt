Los componentes cuando se declaran siempre arrancan con mayúscula y siempre retornan estética, estos archivos 
ahora tienen la extencion de JSX, "<> </>"no impactan en el CEO.
El archivo "package.json" esta toda la informacion interna del proyecto(para poder levantarlo)
    Los "dependencies" utilidades o funcionalidades que nosotros instalamos para desarrollar la pagina.
    Los "devDependencies" nos ayudan a nosotros los desarrolladores a desarrollar la pagina. (ej: eslint marca errores) 
El archivo "index.html" no se toca nada, punto de entrada que va usar la pagina para levantar.
El archivo "main.jsx" (es un componente que conecta con el html) que esta dentro de "src" tampoco se toca nada.
    El codigo (css global) importa en "main.jsx"
El archivo "eslint.config.js"se encarga de darnos errores
    (ej: quiero que me avises cuando no pongo un ; al final, errores que nosotros configuramos)
El archivo "gitignore" sirve para ignorar todo lo que no queremos que se suba a git hub.
El archivo "App.jsx" (borramos lineas)

Hay dos tipos de export:
    export no nombrado o default: nos permite renombrar (que no tenga llaves lo hace mas flexible)
    export nombrado o comun: (lleva llaves) (ejemplo: en el archivo app.jsx hay {Proveedor})

Props: son valores que podemos pasarle a un componente para que lo tome y lo use para que este
    componenter realice una accion, una forma de pasar datos

Ganchos/ Hooks: son para hacer funcionalidades, arracan siempre con la palabra "use" en miniscula 

useEffect: ejecuta el codigo que se encuentra dentro, tantas veces como se actualicen
    sus dependencias si no hay dependencias se ejecuta solo antes del primer renderizado

useSate: guarda datos en una variable y tiene una funcion actualizadora
import './App.css'

---------------------------------------------------
el nombre de un evento xunado se hace un boton siempre se llamara "handClick"
nunca se pone negro y blanco(solos) porque impacta visualmente
{nombre && <h2>{nombre}</h2>} es como if solo
{nombre ? <>hola>/> : <>chau</>} es como un if e else

13/08
npm run dev para correr
npm install instala las dependencias?
index el punto de entrada, no se toca, se conecta con el componente main.jsx, por eso el main.jsx tampoco se toca
git ignore ignora los archivos, porque son pesadas
app.jsx= un conjunto de tres(java,html)intregra la logica,estetica y laiout?
componente arranca es mayuscula, si no se rompe
componente devuelve interfaz (html)
para que sirve un estado? se puede cambiar un estado, useSate
[count, setCount] siempre en la izquierda esta el valor y a la derecha la funcion, como está abajo
valor, una funcion del valor
useEffect ejecuta todo el codigo, recibe dos parametros